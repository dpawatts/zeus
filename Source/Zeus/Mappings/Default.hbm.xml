<?xml version="1.0" encoding="utf-8" ?>
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2" default-lazy="false">

	<!-- AuthorizedRole -->
	<class name="Zeus.Security.AuthorizedRole, Zeus" table="zeusAuthorizedRoles">
		<cache usage="nonstrict-read-write" />

		<id name="ID" column="ID" type="Int32" unsaved-value="0">
			<generator class="native"/>
		</id>
		<many-to-one name="EnclosingItem" column="ItemID" class="Zeus.ContentItem, Zeus" not-null="true" />
		<property name="Role" column="Role" type="String" not-null="true" length="50" />
	</class>

	<!-- ContentDetail: Boolean-, Integer-, Link-, Double-, DateTime-, String-, Object-Detail -->
	<class name="Zeus.Details.ContentDetail, Zeus" table="zeusDetails">
		<cache usage="read-write" />

		<id name="ID" column="ID" type="Int32" unsaved-value="0">
			<generator class="native"/>
		</id>
		<discriminator column="Type" type="String" />

		<many-to-one name="EnclosingItem" column="ItemID" class="Zeus.ContentItem, Zeus" not-null="true" fetch="select" />
		<many-to-one name="EnclosingCollection" column="DetailCollectionID" class="Zeus.Details.DetailCollection, Zeus" fetch="select" lazy="proxy"/>

		<property name="Name" type="String" length="50" />

		<subclass name="Zeus.Details.BooleanDetail, Zeus" discriminator-value="Bool">
			<property name="BoolValue" type="Boolean" />
		</subclass>

		<subclass name="Zeus.Details.IntegerDetail, Zeus" discriminator-value="Int">
			<property name="IntValue" type="Int32" />
		</subclass>

		<subclass name="Zeus.Details.LinkDetail, Zeus" discriminator-value="Link">
			<many-to-one name="LinkedItem" column="LinkValue" class="Zeus.ContentItem, Zeus" lazy="proxy" />
		</subclass>

		<subclass name="Zeus.Details.DoubleDetail, Zeus" discriminator-value="Double">
			<property name="DoubleValue" type="Double" />
		</subclass>

		<subclass name="Zeus.Details.DateTimeDetail, Zeus" discriminator-value="DateTime">
			<property name="DateTimeValue" type="DateTime" />
		</subclass>

		<subclass name="Zeus.Details.StringDetail, Zeus" discriminator-value="String">
			<property name="StringValue" type="StringClob" length="1073741823" />
		</subclass>

		<subclass name="Zeus.Details.ObjectDetail, Zeus" discriminator-value="Object">
			<property name="Value" type="Serializable" length="2147483647" />
		</subclass>
	</class>


	<!-- ContentItem -->
	<class name="Zeus.ContentItem, Zeus" table="zeusItems">
		<cache usage="read-write" />

		<id name="ID" column="ID" type="Int32" unsaved-value="0" access="property">
			<generator class="native" />
		</id>

		<discriminator column="Type" type="String" />

		<property name="Created"	  access="property" not-null="true" />
		<property name="Published"	access="property" />
		<property name="Updated"    access="property" not-null="true" />
		<property name="Expires"	  access="property" />

		<property name="Name"       access="property" length="250" />
		<property name="ZoneName"	  access="property" length="50" />
		<property name="Title"		  access="property" length="250" />
		<property name="SortOrder"	access="property" not-null="true" />
		<property name="Visible"	  access="property" not-null="true" />
		<property name="SavedBy"	  access="property" length="50" />

		<many-to-one name="VersionOf"	column="VersionOfID" class="Zeus.ContentItem, Zeus" not-null="false" lazy="proxy" fetch="select"/>
		<many-to-one name="Parent"    column="ParentID"    class="Zeus.ContentItem, Zeus" not-null="false" lazy="proxy" fetch="select" />

		<bag name="Children" cascade="all" generic="true" inverse="true" order-by="SortOrder" lazy="true">
			<cache usage="read-write" />
			<key column="ParentID" />
			<one-to-many class="Zeus.ContentItem, Zeus"/>
		</bag>

		<map name="Details" inverse="true" cascade="all-delete-orphan" generic="true" where="DetailCollectionID IS NULL" lazy="true">
			<cache usage="read-write" />
			<key column="ItemID" />
			<index column="Name" type="String" />
			<one-to-many class="Zeus.Details.ContentDetail, Zeus"/>
		</map>

		<map name="DetailCollections" inverse="true" cascade="all-delete-orphan" generic="true" lazy="true">
			<cache usage="read-write" />
			<key column="ItemID" />
			<index column="Name" type="String" />
			<one-to-many class="Zeus.Details.DetailCollection, Zeus"/>
		</map>

		<bag name="AuthorizedRoles" inverse="true" cascade="all-delete-orphan" generic="true" fetch="join" lazy="true">
			<cache usage="read-write" />
			<key column="ItemID"/>
			<one-to-many class="Zeus.Security.AuthorizedRole, Zeus"/>
		</bag>
	</class>

	<!-- DetailCollection -->
	<class name="Zeus.Details.DetailCollection, Zeus" table="zeusDetailCollections">
		<cache usage="read-write" />

		<id name="ID" column="ID" type="Int32" unsaved-value="0">
			<generator class="native"/>
		</id>

		<many-to-one name="EnclosingItem" column="ItemID" class="Zeus.ContentItem, Zeus" />
		<property name="Name" type="String" not-null="true" length="50" />

		<bag name="Details" generic="true" lazy="false" cascade="all-delete-orphan" inverse="true">
			<cache usage="nonstrict-read-write"/>
			<key column="DetailCollectionID" />
			<one-to-many class="Zeus.Details.ContentDetail, Zeus"/>
		</bag>
	</class>

</hibernate-mapping>